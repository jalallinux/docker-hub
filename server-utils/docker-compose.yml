version: '3'
services:

    postgres:
        container_name: '${HDS_POSTGRES_CONTAINER_NAME:-hidevs_postgres}'
        image: 'bitnami/postgresql:${HDS_POSTGRES_BITNAMI_VERSION:-14}'
        ports:
            - '${HDS_POSTGRES_FORWARDED_PORT:-5432}:5432'
        environment:
            POSTGRESQL_POSTGRES_PASSWORD: '${HDS_POSTGRES_POSTGRES_PASSWORD:-sXQHNK59FYke}'
            POSTGRESQL_USERNAME: 'poostgres'
            POSTGRESQL_PASSWORD: '${HDS_POSTGRES_POSTGRES_PASSWORD:-sXQHNK59FYke}'
        networks:
            tick:
                ipv4_address: '${HDS_POSTGRES_NETWORK_IP:-10.0.1.3}'
        volumes:
            - 'postgres_data:/bitnami/postgresql'
            - './postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql'
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
            retries: 3
            timeout: 5s

    redis:
        container_name: ${HDS_REDIS_CONTAINER_NAME:-hidevs_redis}
        image: 'bitnami/redis:${HDS_REDIS_BITNAMI_VERSION:-7.0}'
        ports:
            - '${HDS_REDIS_FORWARDED_PORT:-5432}:6379'
        environment:
            ALLOW_EMPTY_PASSWORD: 'no'
            REDIS_PASSWORD: '${HDS_REDIS_POSTGRES_PASSWORD:-sXQHNK59FYke}'
            REDIS_DISABLE_COMMANDS: 'FLUSHDB,FLUSHALL'
        networks:
            tick:
                ipv4_address: '${HDS_REDIS_NETWORK_IP:-10.0.1.4}'
        volumes:
            - 'redis_data:/bitnami/redis/data'
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    mongodb:
        container_name: '${HDS_MONGODB_CONTAINER_NAME:-hidevs_mongodb}'
        image: 'bitnami/mongodb:${HDS_MONGODB_BITNAMI_VERSION:-5.0}'
        ports:
            - '${HDS_MONGODB_FORWARDED_PORT:-27017}:27017'
        environment:
            MONGODB_ENABLE_DIRECTORY_PER_DB: 'yes'
            ALLOW_EMPTY_PASSWORD: 'no'
            MONGODB_ROOT_USER: '${HDS_MONGODB_ROOT_USER:-mongodb}'
            MONGODB_ROOT_PASSWORD: '${HDS_MONGODB_ROOT_PASSWORD:-sXQHNK59FYke}'
            # MONGODB_USERNAME: 'mongodb'
            # MONGODB_PASSWORD: 'mongodb'
        volumes:
            - 'mongodb_data:/bitnami/mongodb'
        networks:
            tick:
                ipv4_address: '${HDS_MONGODB_NETWORK_IP:-10.0.1.5}'

    nextcloud:
        container_name: '${HDS_NEXTCLOUD_CONTAINER_NAME:-hidevs_nextcloud}'
        image: 'nextcloud:${HDS_NEXTCLOUD_VERSION:-apache}'
        restart: always
        ports:
            - '8001:80'
        volumes:
            - nextcloud_data:/var/www/html
        environment:
            POSTGRES_HOST: '${HDS_POSTGRES_NETWORK_IP:-10.0.1.3}'
            POSTGRES_DB: '${HDS_NEXTCLOUD_DATABASE:-nextcloud}'
            POSTGRES_USER: 'postgres'
            POSTGRES_PASSWORD: '${HDS_POSTGRES_POSTGRES_PASSWORD:-sXQHNK59FYke}'
        depends_on:
            - postgres
        networks:
            tick:
                ipv4_address: '${HDS_NEXTCLOUD_NETWORK_IP:-10.0.1.6}'

    grafana:
        container_name: '${HDS_GRAFANA_CONTAINER_NAME:-hidevs_grafana}'
        image: 'grafana/grafana-enterprise:${HDS_GRAFANA_VERSION:-9.0.3}'
        restart: unless-stopped
        ports:
            - '8002:3000'
        volumes:
            - 'grafana_data:/var/lib/grafana'
        environment:
            GF_DATABASE_TYPE: 'postgres'
            GF_DATABASE_HOST: '${HDS_POSTGRES_NETWORK_IP:-10.0.1.3}:${HDS_POSTGRES_FORWARDED_PORT:-5432}'
            GF_DATABASE_NAME: '${HDS_GRAFANA_DATABASE:-grafana}'
            GF_DATABASE_USER: 'postgres'
            GF_DATABASE_PASSWORD: '${HDS_POSTGRES_POSTGRES_PASSWORD:-sXQHNK59FYke}'
            GF_DATABASE_SSL_MODE: 'disable'
        depends_on:
            - postgres
        networks:
            tick:
                ipv4_address: '${HDS_GRAFANA_NETWORK_IP:-10.0.1.7}'

    apache:
        container_name: '${HDS_APACHE_CONTAINER_NAME:-hidevs_apache}'
        build: .
        ports:
            - '80:80'
            - '443:443'
        volumes:
            #            - 'apache_config_data:/etc/apache2'
            #            - 'apache_app_data:/apps'
            - '/app/apache/sites-available:/etc/apache2/sites-available'
            - '/app/apache/sites-enabled:/etc/apache2/sites-enabled'
            - '/app/subdomains:/var/www/subdomains'
            - '/app/domains:/var/www/domains'
            - '/app/certificates:/app/certificates'

networks:
    tick:
        name: ${HDS_NETWORK_NAME:-hidevs_tick}
        driver: bridge
        ipam:
            config:
                - subnet: '${HDS_NETWORK_SUBNET:-10.0.1.0/16}'

volumes:
    apache_config_data:
        name: '${HDS_APACHE_VOLUME_NAME:-hidevs_apache_config_data}'
        driver: local
    apache_app_data:
        name: '${HDS_APACHE_VOLUME_NAME:-hidevs_apache_app_data}'
        driver: local
    postgres_data:
        name: '${HDS_POSTGRES_VOLUME_NAME:-hidevs_postgres_data}'
        driver: local
    redis_data:
        name: '${HDS_REDIS_VOLUME_NAME:-hidevs_redis_data}'
        driver: local
    mongodb_data:
        name: '${HDS_MONGODB_VOLUME_NAME:-hidevs_mongodb_data}'
        driver: local
    nextcloud_data:
        name: '${HDS_NEXTCLOUD_VOLUME_NAME:-hidevs_nextcloud_data}'
        driver: local
    grafana_data:
        name: '${HDS_GRAFANA_VOLUME_NAME:-hidevs_grafana_data}'
        driver: local
